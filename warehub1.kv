# Reference main.py
#: import main main
#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#: import ListAdapter kivy.adapters.listadapter.ListAdapter
#: import ListItemButton kivy.uix.listview.ListItemButton


<LoginScreen>:
	BoxLayout:

		orientation: 'vertical'
		padding: 60, 50, 60, 100
		spacing: 50
		size: self.size


		Widget:
			size_hint:1, None
			height: 100
			
			
		TextInput:
			id: username_text
			size_hint: 1, None
			font_size: 40
			height: 80
			color: 0, 0, 1, 1
			valign: 'middle'
			halign: 'middle'
			background_color:[ 1, 1, 1, 1]
			multiline: False
			hint_text: 'ID'
			
			
			
		TextInput:
			id: password_text
			size_hint: 1, None
			font_size: 40
			height: 80 		
	        multiline: False
	        password: True
	        hint_text: 'password'


	    Widget:

			
			
	    Button:
	    	size_hint: 1, None
	    	height: 80
	    	font_size: 40
			text: 'Login'
			background_color: .88, .88, .88, 1
			on_release: root.login()




<AddUserScreen>:
	BoxLayout:

		orientation: 'vertical'
		padding: 50, 50, 50, 50
		spacing: 20
		
			
		TextInput:
			id: name_text
			size_hint: 1, None
			font_size: 40
			height: 80
			multiline: False
			hint_text: 'name'
			
			
			
		TextInput:
			id: password_text
			size_hint: 1, None
			font_size: 40
			height: 80 		
	        multiline: False
	        password: True
	        hint_text: 'password'

	    TextInput:
			id: phone_text
			size_hint: 1, None
			font_size: 40
			height: 80 		
	        multiline: False
	        hint_text: 'phone'

	    TextInput:
			id: points_text
			size_hint: 1, None
			font_size: 40
			height: 80 		
	        multiline: False
	        hint_text: 'points'

	    BoxLayout:
	    	CheckBox:
	    		id: manager_radiobutton
	    		group: True
	    	Label:
	    		text: 'Manager'
	    		font_size: 30
	    	CheckBox:
	    		id: student_radiobutton
	    		group: True
	    	Label:
	    		text: 'Student'
	    		font_size: 30
	    	CheckBox:
	    		id: tech_radiobutton
	    		group: True
	    	Label:
	    		text: 'Technician'
	    		font_size: 30

	    BoxLayout:
	    	CheckBox:
	    		id: ta_checkbox
	    	Label:
	    		text: 'TA'
	    		font_size: 30

	    Widget:

	    Button:
	    	size_hint: 1, None
	    	height: 80
	    	font_size: 40
			text: 'Add User'
			on_release: root.insertUser()

		Widget:

		Button:
	    	size_hint: None, None
	    	height: 80	
	    	width: 200
	    	font_size: 40
			text: 'Back'
			on_release:root.manager.current = 'clear_screen'; root.manager.current = 'manager_screen'

	    Widget:





<ManagerScreen>:
	my_list: students_list_view
	BoxLayout:
		orientation: 'horizontal'
		id: my_boxlayout
		BoxLayout:
		
			orientation: 'vertical'
			padding: 30, 70, 30, 70
			spacing: 50

			Button:
		    	text: 'Add User'
		    	on_release:root.manager.current = 'clear_screen'; root.manager.current = 'adduser_screen'


		    Button:
		    	text: 'Get Students'
		    	on_release: root.getStudents()

		    Button:
		    	text: 'Get Technicians'
		    	on_release: root.getTechs()

		    Button:
		    	text: 'Get Devices'
		    	on_release: root.getDevices()

		    Button:
		    	text: 'Update Information'
		    	on_release:root.manager.current = 'clear_screen'; root.manager.current = 'updateinfo_screen'
		    Button:
		    	text: 'Sign out'
		    	on_release:root.manager.current = 'clear_screen'; root.manager.current = 'login_screen'; root.my_list.adapter.data = []

		BoxLayout:
			padding: 20, 70, 20, 20
			orientation: 'vertical'
			spacing: 20
			ListView:
		        id: students_list_view
		        adapter:
		            ListAdapter(data=[],args_converter=lambda row_index, an_obj: {'text': an_obj,'size_hint_y': None,'height': 160}, cls=main.Student, selection_mode='single', allow_empty_selection=True)

		    Button:
		    	size_hint_y: None
		    	height: 60
		    	text: 'Delete'
		    	on_release: root.deleteElement()





<DeviceStudentScreen>:
	listonedevice: students_list_view

	BoxLayout:
		orientation: 'vertical'
		spacing: 30
		padding: 30
		BoxLayout:
			orientation: 'horizontal'
			spacing: 10
			Label:
				text: 'Start Time'
				font_size: 30
		    TextInput:
				id: months_textinput	
		        multiline: False
		        hint_text: 'Month'
		        font_size: 30
		    TextInput:
				id: days_textinput		
		        multiline: False
		        hint_text: 'Day'
		        font_size: 30

		    TextInput:
				id: hours_textinput		
		        multiline: False
		        hint_text: 'Hour'
		        font_size: 30

		    TextInput:
				id: minutess_textinput	
		        multiline: False
		        hint_text: 'Minutes'
		        font_size: 30

		BoxLayout:
			orientation: 'horizontal'
			spacing: 10
			Label:
				text: 'End Time'
				font_size: 30
		    TextInput:
				id: monthe_textinput	
		        multiline: False
		        hint_text: 'Month'
		        font_size: 30
		    TextInput:
				id: daye_textinput		
		        multiline: False
		        hint_text: 'Day'
		        font_size: 30

		    TextInput:
				id: houre_textinput		
		        multiline: False
		        hint_text: 'Hour'
		        font_size: 30

		    TextInput:
				id: minutese_textinput	
		        multiline: False
		        hint_text: 'Minutes'
		        font_size: 30

		Button:
			text: 'Demand'
			size_hint_x: None
			font_size: 30
			width: 300
			on_release: root.demandDevice()

		

		BoxLayout:
			orientation: 'horizontal'
			spacing: 20
		    TextInput:
				id: review_textinput	
		        hint_text: 'Review'
		        font_size: 30

		    Spinner:
		    	id: rate_spinner
		    	size_hint_x: None
		    	width: 80
		    	text: 'Rate'
		    	values: ['1', '2', '3', '4', '5']

		    Button:
				text: 'Add Review'
				size_hint_x: None
				font_size: 30
				width: 200
				on_release: root.addReview()


		BoxLayout:
			size_hint_y: None
			height: 500
			ListView:
			    id: students_list_view
		        adapter:
		            ListAdapter(data=[],args_converter=lambda row_index, an_obj: {'text': an_obj,'size_hint_y': None,'height': 150}, cls=main.Student, selection_mode='single', allow_empty_selection=True)

	    Button: 
	    	text: 'Back'
	    	size_hint_x: None
			font_size: 30
			width: 150
			on_release:root.manager.current = 'clear_screen'; root.manager.current = 'student_screen'





<DeviceTechScreen>:
	BoxLayout:
		orientation: 'vertical'
		BoxLayout:
		
			orientation: 'horizontal'
			padding: 30, 70, 30, 70
			spacing: 30

			Button:
		    	text: 'Delete Device'
		    	#on_release:root.manager.current = 'clear_screen'; root.manager.current = 'adduser_screen'

		    Button:
		    	text: 'Update Device'
		    	#on_release: root.getStudents()

		ListView:
	        id: one_device_Tech
	        adapter:
	            ListAdapter(data=[],args_converter=lambda row_index, an_obj: {'text': an_obj,'size_hint_y': None,'height': 40}, cls=main.Student)


<TechScreen>:
	tech_list_view: tech_list_view
	BoxLayout:
		id: techbox
		orientation: 'horizontal'
		padding: 0, 30, 20, 30
		BoxLayout:
		
			orientation: 'vertical'
			padding: 20, 0, 20, 0
			spacing: 30

			Button:
		    	text: 'Update Information'
		    	on_release:root.manager.current = 'clear_screen'; root.manager.current = 'updateinfo_screen'

		    Spinner:
		    	text: 'Get Devices'
				id: Devices_Tech_Spinner

		    Button:
		    	text: 'Add Device'
		    	on_release: root.manager.current = 'clear_screen'; root.manager.current = 'adddevice_screen'

		    Button:
		    	text: 'Add Operating System'
		    	on_release: root.addOS()

		    Button:
		    	text: 'Add Software'
		    	on_release: root.addSoftware()

		    Button:
		    	text: 'Add IC Type'
		    	on_release: root.addICType()

		    Button:
		    	text: 'See Demands'
		    	on_release: root.getDemands()

		    Button:
		    	text: 'Sign out'
		    	on_release: root.manager.current = 'clear_screen'; root.manager.current = 'login_screen'; root.tech_list_view.adapter.data = []

		ListView:
	        id: tech_list_view
	        adapter:
	            ListAdapter(data=[],args_converter=lambda row_index, an_obj: {'text': an_obj,'size_hint_y': None,'height': 170}, cls=main.Student, selection_mode='single', allow_empty_selection=True)



<StudentScreen>:
	my_list: students_list_view
	BoxLayout:
		id: studentbox
		orientation: 'horizontal'
		padding: 0, 50, 20, 50
		BoxLayout:
		
			orientation: 'vertical'
			padding: 30, 50, 30, 50
			spacing: 40

			Button:
		    	text: 'Update Information'
		    	on_release:root.manager.current = 'clear_screen'; root.manager.current = 'updateinfo_screen'

		    Button:
		    	text: 'Demand Device'

		    Button:
		    	text: 'My Demands'
		    	on_release: root.getDemands()

		    Spinner:
		    	text: 'Get Devices'
				id: Devices_Spinner
				#values: devices_names
				

		    Button:
		    	text: 'Sign out'
		    	on_release:root.manager.current = 'clear_screen'; root.manager.current = 'login_screen'; root.my_list.adapter.data = []
			
		ListView:
	        id: students_list_view
	        adapter:
	            ListAdapter(data=[],args_converter=lambda row_index, an_obj: {'text': an_obj,'size_hint_y': None,'height': 170}, cls=main.Student, selection_mode='single', allow_empty_selection=True)





<UpdateInfoScreen>:
	BoxLayout:

		orientation: 'vertical'
		padding: 50, 50, 50, 50
		spacing: 30
		
		Widget:
			
		TextInput:
			id: password_text
			size_hint: 1, None
			font_size: 40
			height: 80
			multiline: False
			password: True
			hint_text: 'password'
			
			
			
		TextInput:
			id: phone_text
			size_hint: 1, None
			font_size: 40
			height: 80 		
	        multiline: False
	        hint_text: 'phone'

	    Widget:



	    Button:
	    	size_hint: 1, None
	    	height: 80	
	    	font_size: 40
			text: 'Update Information'
			on_release: root.updateInfo()

		Widget:

		Widget:

		Button:
	    	size_hint: None, None
	    	height: 80	
	    	width: 200
	    	font_size: 40
			text: 'Back'
			on_release:root.manager.current = 'clear_screen'; root.manager.current = root.backButton()


	    Widget:




<AdditionScreen>:
	BoxLayout:

		orientation: 'vertical'
		padding: 60, 50, 60, 100
		spacing: 50
		size: self.size


		Widget:
			size_hint:1, None
			height: 100
			
			
		TextInput:
			id: name_text
			size_hint: 1, None
			font_size: 40
			height: 80
			color: 0, 0, 1, 1
			valign: 'middle'
			halign: 'middle'
			background_color:[ 1, 1, 1, 1]
			multiline: False
			hint_text: 'Name'
			
			
			
		TextInput:
			id: link_text
			size_hint: 1, None
			font_size: 40
			height: 80 		
	        multiline: False
	        hint_text: 'link'


	    Widget:

			
			
	    Button:
	    	size_hint: 1, None
	    	height: 80
	    	font_size: 40
			text: 'Add'
			background_color: .88, .88, .88, 1
			on_release: root.add()

		Button:
	    	size_hint: None, None
	    	height: 80
	    	width: 200
	    	font_size: 40
			text: 'Back'
			background_color: .88, .88, .88, 1
			on_release: root.manager.current = 'clear_screen'; root.manager.current = 'tech_screen'



<AddDeviceScreen>
	BoxLayout:
		orientation: 'vertical'
		padding: 20
		spacing: 60
		BoxLayout:
			spacing: 20
			padding: 20
			orientation: 'horizontal'
			Spinner:
				text: 'Type'
				values: ['PCs','Data shows','Microphones','Kits','Arduinos','Bread boards','ICs']
			Spinner:
				text: 'location'
				values: ['1', '2', '3', '4']
			Spinner:
				text: 'Status'
				values: ['0', '1']

		Widget:
			size_hint_y: None
			height: 700
		Button:
			text: 'Add'
		Button:
			text: 'Back'
			size_hint_x: None
			width: 200
			on_release: root.manager.current = 'clear_screen'; root.manager.current = 'tech_screen'




<ClearScreen>
	BoxLayout:
		Widget:


<ScreenManagment>:
	id: screen_manager
	login_screen: login_screen
	manager_screen: manager_screen
	device_student_screen: device_student_screen
	one_device_Tech:one_device_Tech

	LoginScreen:
		id: login_screen
		name:"login_screen"
		manager: screen_manager

	ManagerScreen:
		id: manager_screen
		name: 'manager_screen'
		manager: screen_manager


	StudentScreen:
		id: student_screen
		name: 'student_screen'
		manager: screen_manager

	DeviceStudentScreen:
		id: device_student_screen
		name: 'device_student_screen'
		manager: screen_manager

	DeviceTechScreen:
		id: one_device_Tech
		name: 'one_device_Tech'
		manager: screen_manager

	AddUserScreen:
		id: adduser_screen
		name: 'adduser_screen'
		manager: screen_manager

	UpdateInfoScreen:
		id: updateinfo_screen
		name: 'updateinfo_screen'
		manager: screen_manager

	TechScreen:
		id: tech_screen
		name: 'tech_screen'
		manager: screen_manager

	ClearScreen:
		id: clear_screen
		name: 'clear_screen'
		manager: screen_manager


	AdditionScreen:
		id: addition_screen
		name: 'addition_screen'
		manager: screen_manager

	AddDeviceScreen:
		id: adddevice_screen
		name: 'adddevice_screen'
		manager: screen_manager